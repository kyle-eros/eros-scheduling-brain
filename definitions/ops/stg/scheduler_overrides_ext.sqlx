config {
  type: "table",
  schema: "eros_ops_stg",
  partitionBy: "override_date",
  clusterBy: ["username_std", "scheduler_email"],
  description: "External scheduler overrides and manual interventions (price guards, manager overrides)",
  labels: {app: "eros", domain: "ops", layer: "stg"},
  tags: ["ops_stg", "overrides"]
}

pre_operations {
  BEGIN
    -- Align the existing table's clustering to match the new spec BEFORE CTAS.
    ALTER TABLE `of-scheduler-proj.eros_ops_stg.scheduler_overrides_ext`
    SET OPTIONS (clustering_fields = ['username_std','scheduler_email']);
  EXCEPTION WHEN ERROR THEN
    -- Ignore if the table doesn't exist yet.
  END;
}

-- Price override logging table for manager overrides
-- Populated by Apps Script when managers override tier-based price guardrails
SELECT
  CAST(NULL AS STRING) as override_id,
  CAST(NULL AS TIMESTAMP) as override_ts,
  CAST(NULL AS DATE) as override_date,
  CAST(NULL AS STRING) as username_std,
  CAST(NULL AS STRING) as tier_id,
  CAST(NULL AS STRING) as price_band,
  CAST(NULL AS FLOAT64) as min_allowed,
  CAST(NULL AS FLOAT64) as max_allowed,
  CAST(NULL AS FLOAT64) as price_entered,
  CAST(NULL AS STRING) as override_type,
  CAST(NULL AS STRING) as reason,
  CAST(NULL AS STRING) as scheduler_email
LIMIT 0

post_operations {
  -- Ensure BigQuery table clustering matches Dataform config
  ALTER TABLE ${self()}
  SET OPTIONS (clustering_fields = ['username_std', 'scheduler_email']);
}
